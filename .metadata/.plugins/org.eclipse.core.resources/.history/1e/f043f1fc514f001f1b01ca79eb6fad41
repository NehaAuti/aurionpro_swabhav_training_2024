package com.aurionpro.creational.abstractfactory.test;

import java.util.Scanner;

import com.aurionpro.creational.abstractfactory.model.Account;
import com.aurionpro.creational.abstractfactory.model.AccountFactory;
import com.aurionpro.creational.abstractfactory.model.CurrentAccount;
import com.aurionpro.creational.abstractfactory.model.IAccountFactory;
import com.aurionpro.creational.abstractfactory.model.SavingAccount;

public class AccountTest {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		        Scanner scanner = new Scanner(System.in);
		        while (true) {
		            System.out.println("\n1. Create Account");
		            System.out.println("2. Credit");
		            System.out.println("3. Debit");
		            System.out.println("4. Check Balance");
		            System.out.println("5. Check Minimum Balance (Saving Account)");
		            System.out.println("6. Check Overdraft Balance (Current Account)");
		            System.out.println("7. Exit");
		            System.out.print("Enter your choice: ");
		            int choice = scanner.nextInt();
		            scanner.nextLine(); // Consume newline

		            switch (choice) {
		                case 1:
		                    createAccount();
		                    break;
		                case 2:
		                    credit();
		                    break;
		                case 3:
		                    debit();
		                    break;
		                case 4:
		                    checkBalance();
		                    break;
		                case 5:
		                    checkMinimumBalance();
		                    break;
		                case 6:
		                    checkOverdraftBalance();
		                    break;
		                case 7:
		                    System.out.println("Exiting...");
		                    scanner.close();
		                    System.exit(0);
		                    break;
		                default:
		                    System.out.println("Invalid choice! Please try again.");
		            }
		        }
		    }

		    private static void createAccount() {
		        System.out.print("Enter account type (Saving/Current): ");
		        String accountType = scanner.nextLine();
		        System.out.print("Enter account number: ");
		        String accountNumber = scanner.nextLine();
		        System.out.print("Enter name: ");
		        String name = scanner.nextLine();
		        System.out.print("Enter initial balance: ");
		        double balance = scanner.nextDouble();
		        scanner.nextLine(); // Consume newline

		        double overdraftLimit = 0.0;
		        if ("current".equalsIgnoreCase(accountType)) {
		            System.out.print("Enter overdraft limit: ");
		            overdraftLimit = scanner.nextDouble();
		            scanner.nextLine(); // Consume newline
		        }

		        IAccountFactory factory = AccountFactory.getFactory(accountType, overdraftLimit);
		        if (factory == null) {
		            System.out.println("Invalid account type!");
		            return;
		        }

		        Account account = factory.createAccount(accountNumber, name, balance);
		        accounts.put(accountNumber, account);
		        System.out.println(accountType + " account created successfully!");
		    }

		    private static void credit() {
		        Account account = getAccountFromUser();
		        if (account == null) return;

		        System.out.print("Enter amount to credit: ");
		        double amount = scanner.nextDouble();
		        scanner.nextLine(); // Consume newline
		        account.credit(amount);
		    }

		    private static void debit() {
		        Account account = getAccountFromUser();
		        if (account == null) return;

		        System.out.print("Enter amount to debit: ");
		        double amount = scanner.nextDouble();
		        scanner.nextLine(); // Consume newline
		        account.debit(amount);
		    }

		    private static void checkBalance() {
		        Account account = getAccountFromUser();
		        if (account == null) return;

		        System.out.println("Account Balance: " + account.getBalance());
		    }

		    private static void checkMinimumBalance() {
		        Account account = getAccountFromUser();
		        if (!(account instanceof SavingAccount)) {
		            System.out.println("Saving Account not found!");
		            return;
		        }

		        ((SavingAccount) account).checkMinimumBalance();
		    }

		    private static void checkOverdraftBalance() {
		        Account account = getAccountFromUser();
		        if (!(account instanceof CurrentAccount)) {
		            System.out.println("Current Account not found!");
		            return;
		        }

		        ((CurrentAccount) account).checkOverdraftBalance();
		    }

		    private static Account getAccountFromUser() {
		        System.out.print("Enter account number: ");
		        String accountNumber = scanner.nextLine();
		        Account account = accounts.get(accountNumber);
		        if (account == null) {
		            System.out.println("Account not found!");
		            return null;
		        }
		        return account;
		    }
		}


	}

}

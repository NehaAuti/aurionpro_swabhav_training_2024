package com.aurionpro.stream.test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.function.Function;
import java.util.stream.Collectors;

import com.aurionpro.stream.model.Country;
import com.aurionpro.stream.model.Region;

public class CountryRegionTest {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
	        // Create Region objects with IDs
	        Region europe = new Region(1, "Europe");
	        Region americas = new Region(2, "Americas");
	        Region asia = new Region(3, "Asia");
	        Region middleEastAfrica = new Region(4, "Middle East and Africa");

	        // Create a list to store Country objects with region IDs
	        List<Country> countries = new ArrayList<>();
	        
	        // Add Country objects to the list with region IDs
	        countries.add(new Country("IT", "Italy", 1));
	        countries.add(new Country("JP", "Japan", 3));
	        countries.add(new Country("US", "United States of America", 2));
	        countries.add(new Country("CA", "Canada", 2));
	        countries.add(new Country("CN", "China", 3));
	        countries.add(new Country("IN", "India", 3));
	        countries.add(new Country("AU", "Australia", 3));
	        countries.add(new Country("ZW", "Zimbabwe", 4));
	        countries.add(new Country("SG", "Singapore", 3));
	        countries.add(new Country("UK", "United Kingdom", 1));
	        countries.add(new Country("FR", "France", 1));
	        countries.add(new Country("DE", "Germany", 1));
	        countries.add(new Country("ZM", "Zambia", 4));
	        countries.add(new Country("EG", "Egypt", 4));
	        countries.add(new Country("BR", "Brazil", 2));
	        countries.add(new Country("CH", "Switzerland", 1));
	        countries.add(new Country("NL", "Netherlands", 1));
	        countries.add(new Country("MX", "Mexico", 2));
	        countries.add(new Country("KW", "Kuwait", 4));
	        countries.add(new Country("IL", "Israel", 4));
	        countries.add(new Country("DK", "Denmark", 1));
	        countries.add(new Country("HK", "HongKong", 3));
	        countries.add(new Country("NG", "Nigeria", 4));
	        countries.add(new Country("AR", "Argentina", 2));
	        countries.add(new Country("BE", "Belgium", 1));
	

	// Test the methods
    System.out.println("Country name by code 'JP': " + getCountryNameByCode(countries, "JP"));

    System.out.println("Countries in region ID 1:");
    List<Country> countriesInRegion = getCountriesByRegionId(countries, 1);
    for (Country country : countriesInRegion) {
        System.out.println(country);
    }

    System.out.println("Count of countries in each region:");
    Map<Integer, Integer> regionCounts = getCountryCountByRegionId(countries);
    for (Map.Entry<Integer, Integer> entry : regionCounts.entrySet()) {
        System.out.println("Region ID " + entry.getKey() + ": " + entry.getValue());
    }
}

// Method to get country name by code
public static String getCountryNameByCode(List<Country> countries, String code) {
    for (Country country : countries) {
        if (country.getCode().equals(code)) {
            return country.getName();
        }
    }
    return "Country code not found";
}

// Method to get all countries in a region by region ID
public static List<Country> getCountriesByRegionId(List<Country> countries, int regionId) {
    List<Country> result = new ArrayList<>();
    for (Country country : countries) {
        if (country.getRegionId() == regionId) {
            result.add(country);
        }
    }
    return result;
}

// Method to find count of countries in each region
public static Map<Integer, Integer> getCountryCountByRegionId(List<Country> countries) {
    Map<Integer, Integer> countMap = new HashMap<>();
    for (Country country : countries) {
        int regionId = country.getRegionId();
        countMap.put(regionId, countMap.getOrDefault(regionId, 0) + 1);
    }
    return countMap;
}
}